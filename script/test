#!/usr/bin/env node

require(require("path").join(__dirname, "..", "core", "lib", "globals"));
Gourdian.logger.location = path.join(Gourdian.ROOT, "log", "test.log");

// was uninspired by the offerings
var tests_path = path.join(Gourdian.ROOT, "test")
  , messages = []
  , counts = { e: 0, f: 0, p: 0 };

process.on("uncaughtException", function(err) {
  console.log("\nCaught exception: " + err + "\n" + err.stack);
});

// handle options
var opts = new GetOpt();
opts.add("directory", "The absolute directory in which the tests exist.", "test", "d", "directory", GetOpt.REQUIRED_ARGUMENT);
opts.add("name", "Run only the tests with a specified name", "", "n", "name", GetOpt.REQUIRED_ARGUMENT);
opts.add("file", "Run only the tests in a specified file", "", "f", "file", GetOpt.REQUIRED_ARGUMENT);

opts.add("unit-only", "Run only unit tests", false, "u", "unit", GetOpt.NO_ARGUMENT);
opts.add("integration-only", "Run only integration tests", false, "i", "integration", GetOpt.NO_ARGUMENT);

opts.add("list-only", "Do not run the tests, only list them.", "", "l", "list-only", GetOpt.NO_ARGUMENT);

try {
  opts.parse(process.argv);
} catch (e) {
  console.log(e + "\nGourdian server script usage: \n\n" + opts.help());
  return;
}

// set the test base directory if present
if (opts.get("directory")) tests_path = opts.get("directory");

// unit tests
if (!opts.get("integration-only")) {
  console.log("----\nRunning unit tests");
  decide_run_test("unit");
}

// integration tests
if (!opts.get("unit-only")) {
  console.log("----\nRunning integration tests");
  decide_run_test("integration");
}

console.log("----\nFailures: " + counts.f + "; Errors: " + counts.e + "; Pass: " + counts.p + "\n----\nMessages:\n" + messages.join("\n\n"));

  /////////////////////
 // private methods //
/////////////////////
function decide_run_test(relative_dir) {
  var dir = path.join(tests_path, relative_dir)
    , files = fs.readdirSync(dir)
    , restrict_file = opts.get("file")
    , only_file = restrict_file ? path.join(tests_path, opts.get("file")) : ""
    , only_name = opts.get("name");

  if (!files) {
    console.log("\nNo tests specified in the " + relative_dir + " directory. . .");
    return;
  }

  for (var f = 0, l_f = files.length; f < l_f; f++) {
    var test_file = path.join(dir, files[f]);

    // only run js files and limit to tests with given name if specified
    if (path.extname(test_file) != '.js') continue;
    if (restrict_file && !(path.existsSync(only_file) && fs.realpathSync(only_file) == fs.realpathSync(test_file))) continue;

    var required_test_file = require(test_file)
      , test_instance = new required_test_file();

    if (opts.get("list-only")) {
      console.log("--\n" + test_file + "\n" + Gourdian.shallow_inspect(test_instance));
    } else {
      test_instance.run_tests(only_name);
      messages = messages.concat(test_instance.get_messages());
      var instance_counts = test_instance.get_counts();
      Gourdian._.each(instance_counts, function(num, key) { counts[key] += instance_counts[key] });
    }
  }
}
