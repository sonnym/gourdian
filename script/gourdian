#! /usr/bin/env node

var fs = require("fs")
  , path = require("path")

  , node_modules_waiting_for_exit = 0;

// main
if (process.argv[2] == "--init-submodules") {
  update_node_modules();

} else if (process.argv[2] == "--init") {
  update_node_modules(function() {
    require(path.join(__dirname, "..", "core", "lib", "globals"))
    create_directory_structure();

    console.log("---\nCopying files. . . \n---");

    FileUtils.copy_files_into_directories(path.join(Gourdian.ROOT, "core", "boilerplate", "init"), Gourdian.ROOT);

    console.log("---\nNew project init complete!\n");
  });
} else {
  console.log("Usage:  script/gourdian --init");
}

function update_node_modules(callback) {
  console.log("---\nInitializing and updating node_modules directory. . .\n---");

  parallel_update_node_modules();

  // everything later in the initialization process depends on the modules being present
  var module_waiting_interval_id = setInterval(function() {
    if (node_modules_waiting_for_exit == 0) {
      clearInterval(module_waiting_interval_id);
      if (callback) callback();
    }
  }, 100);
}

function parallel_update_node_modules() {
  var spawn = require("child_process").spawn
    , node_modules = fs.readdirSync(path.join(__dirname, "..", "node_modules"));

  for (var i = 0, l = node_modules.length; i < l; i++) {
    node_modules_waiting_for_exit++;

    spawn("git", ["submodule", "update", "--init", "--recursive", path.join(__dirname, "..", "node_modules", node_modules[i])]).on("exit", function() {
      node_modules_waiting_for_exit--;
    });
  }
}

function create_directory_structure() {
  console.log("---\nCreating directories. . . \n---");

  var gourdian = require(path.join(__dirname, "..", "core", "gourdian"))
    , directory_structure = [{ "app": ["m", "v", "c"] }, "config", "log", { "public": ["css", "js"] }, { "test": ["integration", "lib", "performance", "unit"] }]
    , directories = FileUtils.reduce_directory_structure(gourdian.ROOT, directory_structure);

  gourdian._.each(directories, function(directory) {
    if (path.existsSync(directory)) {
      console.log(directory + " present");
    } else {
      fs.mkdirSync(directory, 0755);
      console.log(directory + " created");
    }
  });
}
